

JVM虚拟机原理（垃圾回收机制中是如何去解读 GC 日志， 内存分配流程）
CAS 的原理，画图，讲解这个图（运用 CAS 的原理，对原子操作）
泛型权限读取模式，背后的设计原理（为什么设计可读、不可写；不可读、可写)
AsyncTask 背后的原理（对线程池的设计，如何检测任务执行的进度)
ClassLoader 加载流程（PathClassLoader，DexClassLoader，BootClassLoader关系流程，双亲委托机制）

一面，考察技术深度

* 内存抖动原理和解决方案（短时间创建和回收内存对象，造成的内存碎片）（Glide 开源框架的源码，利用“复用池机制”来解决内存抖动。活动内存）

* 冷启动、热启动流程
	冷启动：首次打开应用的流程（经过 zygoete 孵化进程， AMS ，ActivtyThread 通信，激活）
	热启动：

* Binder 机制的原理（用户空间，内核空间，Binder 为什么比 Linux 性能高, Binder 的一次 Copy； 为什么一次 Copy， mmap 原理）
二面，考察性能优化

三面，考察业务能力及技术应用

RxJava 源码中的设计模式， RxJava 线程调度（发布订阅模式， 通过 Handler 切换）
OkHttp 连接池原理（同一域名和端口时，启用连接池，目的时减少三次握手、四次挥手，保证 Socket 的服用；），责任链模式
Glide 缓存机制原理（
	运行时内存缓存，持久性磁盘缓存的配合关系
）

ARouter 的原理（组件和组件之间没有关系，如何通过 ARouter 进行通信， APT 注解处理器）

四面：考察开源框架

HR 注意事项：
前面两家公司，必须真实，，背景调查